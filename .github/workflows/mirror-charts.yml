name: Mirror Charts

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  pull:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: argocd
            url: https://argoproj.github.io/argo-helm
          - name: cloudnative-pg
            url: https://cloudnative-pg.github.io/charts
          - name: prometheus-community
            url: https://prometheus-community.github.io/helm-charts
    steps:
      - name: Git Checkout
        uses: actions/checkout@main
        with:
          ref: gh-pages
          fetch-depth: 1

      - name: Helm Installation
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Pull charts
        id: pull
        shell: bash
        run: |
          IFS=$'\n'
          git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)"
          if [ ! -d ${{ matrix.name }} ]; then
            mkdir ${{ matrix.name }}
          fi
          cd ${{ matrix.name }}
          echo "::group::Update Helm data"
          helm repo add ${{ matrix.name }} ${{ matrix.url }}
          helm repo update
          echo "::endgroup::"
          for entry in $(helm search repo ${{ matrix.name }} -l -o json | jq -c --raw-output '.[]'); do
            chart=$(echo ${entry} | jq -c --raw-output '.name' | cut -d'/' -f2-)
            version=$(echo ${entry} | jq -c --raw-output '.version')
            if [[ ! -e "${chart}-${version}.tgz" ]]; then
              echo "::group::Pulling ${chart} ${version}"
              helm pull ${{ matrix.name }}/${chart} --version ${version}
              echo "::endgroup::"
              echo "::group::Committing ${chart} ${version}"
              git add "${chart}-${version}.tgz"
              git commit -m "ci: Mirroring ${{ matrix.name }}/${chart} ${version}"
              echo "::endgroup::"
              echo "true" > ../changed.txt
            fi
          done
          if [[ -e ../changed.txt ]]; then
              echo "::group::Syncing to repo"
              git pull --rebase && git push
              echo "::endgroup::"
          fi

      - uses: actions/upload-artifact@main
        with:
          name: changed
          path: changed.txt

  dispatch:
    runs-on: ubuntu-latest
    needs: [pull]
    if: github.event_name != 'pull_request'
    steps:
      - name: Load changes
        uses: actions/download-artifact@main
        with:
          name: changed
          path: changed

      - name: Identify if indexes need updating
        id: vars
        run: |
          echo "CHANGED=$(find changed -type f | wc -l)" | tee -a ${GITHUB_OUTPUT}

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@main
        if: ${{ steps.vars.outputs.CHANGED > 0 }}
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          event-type: update-index
